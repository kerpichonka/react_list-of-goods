{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","goods","isVissible","isReversed","sortBy","showList","setState","reverseList","sortAsString","sortAsNumber","resetList","this","newGoods","sort","prevGood","nextGood","localeCompare","length","reverse","className","type","onClick","map","good","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA+FaC,E,4MA3FbC,MAAQ,CACNC,MAAOH,EACPI,YAAY,EACZC,YAAY,EACZC,OAAQ,I,EAGVC,SAAW,WACT,EAAKC,SAAS,CAAEJ,YAAY,K,EAG9BK,YAAc,WACZ,EAAKD,UAAS,SAAAN,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gB,EAIvBK,aAAe,WACb,EAAKF,SAAS,CAAEF,OAAQ,Y,EAG1BK,aAAe,WACb,EAAKH,SAAS,CAAEF,OAAQ,Y,EAG1BM,UAAY,WACV,EAAKJ,SAAS,CACZL,MAAOH,EACPK,YAAY,EACZC,OAAQ,M,uDAIF,IAAD,EAC2CO,KAAKX,MAA/CE,EADD,EACCA,WAAYD,EADb,EACaA,MAAOE,EADpB,EACoBA,WAAYC,EADhC,EACgCA,OACjCQ,EAAQ,YAAOX,GAmBrB,OAjBAW,EAASC,MAAK,SAACC,EAAUC,GACvB,OAAQX,GACN,IAAK,SACH,OAAOU,EAASE,cAAcD,GAEhC,IAAK,SACH,OAAOD,EAASG,OAASF,EAASE,OAEpC,QACE,OAAO,MAITd,GACFS,EAASM,UAIT,yBAAKC,UAAU,OACb,qCACCjB,GACC,4BAAQkB,KAAK,SAASC,QAASV,KAAKN,UAApC,SAIDH,GACC,oCACE,4BACGU,EAASU,KAAI,SAAAC,GAAI,OAAK,wBAAIC,IAAKD,GAAOA,OAGzC,4BAAQH,KAAK,SAASC,QAASV,KAAKJ,aAApC,WAIA,4BAAQa,KAAK,SAASC,QAASV,KAAKH,cAApC,YAIA,4BAAQY,KAAK,SAASC,QAASV,KAAKF,cAApC,YAIA,4BAAQW,KAAK,SAASC,QAASV,KAAKD,WAApC,e,GAjFMe,IAAMC,WCZxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.226284ee.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goods: goodsFromServer,\n    isVissible: false,\n    isReversed: false,\n    sortBy: '',\n  };\n\n  showList = () => {\n    this.setState({ isVissible: true });\n  };\n\n  reverseList = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAsString = () => {\n    this.setState({ sortBy: 'string' });\n  }\n\n  sortAsNumber = () => {\n    this.setState({ sortBy: 'number' });\n  }\n\n  resetList = () => {\n    this.setState({\n      goods: goodsFromServer,\n      isReversed: false,\n      sortBy: '',\n    });\n  }\n\n  render() {\n    const { isVissible, goods, isReversed, sortBy } = this.state;\n    const newGoods = [...goods];\n\n    newGoods.sort((prevGood, nextGood) => {\n      switch (sortBy) {\n        case 'string':\n          return prevGood.localeCompare(nextGood);\n\n        case 'number':\n          return prevGood.length - nextGood.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      newGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {isVissible || (\n          <button type=\"button\" onClick={this.showList}>\n            Start\n          </button>\n        )}\n        {isVissible && (\n          <>\n            <ul>\n              {newGoods.map(good => (<li key={good}>{good}</li>))}\n            </ul>\n\n            <button type=\"button\" onClick={this.reverseList}>\n              Reverse\n            </button>\n\n            <button type=\"button\" onClick={this.sortAsString}>\n              Sort A-Z\n            </button>\n\n            <button type=\"button\" onClick={this.sortAsNumber}>\n              Sort 0-9\n            </button>\n\n            <button type=\"button\" onClick={this.resetList}>\n              Reset\n            </button>\n\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}